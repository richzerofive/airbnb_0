/**
 * 
 */
package bank;

import java.util.List;

import javax.swing.plaf.synth.SynthSeparatorUI;


/**
 * @date : 2016. 6. 20.
 * @author : 박승주
 * @file : AccountServiceImpl.java
 * @story :계좌 인터페이스
 */
public class AccountServiceImpl implements AccountService {
	private static AccountServiceImpl instance = new AccountServiceImpl();
	AccountDAO dao = AccountDAO.getInstance();
	private AccountServiceImpl() {
	}
	public static AccountServiceImpl getInstance() {
		return instance;
	}
	@Override
	public String openAccount(String id) {
		AccountBean acc =new AccountBean();
		acc.setAccountNo();
		acc.setId(id);
		acc.setMoney(0);
		System.out.println(acc);
		String msg = "";
		if (dao.insertAccount(acc)==1) {
			msg = "계좌생성 완료";
		} else {
			msg = "계좌생성 실패";
		}
			return msg;
	}

	@Override
	public void deposit(String depositInfo) {
		String[] arr = depositInfo.split(",");
		AccountBean acc = new AccountBean();
		acc.setAccountNo(Integer.parseInt(arr[0]));
		int money = this.restMoney(Integer.parseInt((arr[0])) + Integer.parseInt(arr[1]));
		acc.setMoney(money);
		dao.deposit(acc);
	}

	@Override
	public String withdraw(String withdrawInfo) {
		String result ="";
		String[] arr = withdrawInfo.split(",");
		AccountBean acc = new AccountBean();
		acc.setAccountNo(Integer.parseInt(arr[0]));
		int withdrawMoney = this.restMoney(Integer.parseInt((arr[0])));
		int restMoney = this.restMoney(Integer.parseInt(arr[1]));
		if (restMoney < withdrawMoney) {
			result ="잔액이 부족합니다";
					
		} else {
			acc.setMoney(restMoney-withdrawMoney);
			dao.withdraw(acc);
			result = "잔액:"+String.valueOf(this.restMoney(Integer.parseInt(arr[0])));
		}
		return result;
	}
	@Override
	public int updateAccount(AccountBean bean) {
		return dao.updateAccount(bean);
	}

	@Override
	public String deleteAccount(String findAcc) {
		String result = "";
		 if (dao.delete(findAcc)==1) {
			result = "삭제성공";
		} else {
			result = "삭제실패";
		}
		 return result;
	}

	@Override
	public List<AccountBean> findAccount( ) {
		List<AccountBean> list = dao.findAccount();
		return list;
	}

	@Override
	public AccountBean findByAccount(AccountBean bean) {
		return dao.findByAccountNo(bean);
	}

	@Override
	public List<AccountBean> findByName(String findName) {
		return dao.findByName(findName);
	}

	@Override
	public int count() {
		
		return dao.count();
	}
	@Override
	public int restMoney(int accNo) {
		return dao.restM(accNo);
	}
}
